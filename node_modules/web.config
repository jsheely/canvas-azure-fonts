<?xml version="1.0" encoding="utf-8"?>
  <!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->
  <configuration>
    <system.web>
      <customErrors mode="Off" />
    </system.web>
    <system.webServer>
      <applicationInitialization skipManagedModules="true" doAppInitAfterRestart="true">  
        <add initializationPage="/warmup" />  
      </applicationInitialization>
      <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
      <webSocket enabled="false" />
      <modules runAllManagedModulesForAllRequests="false" />
      <handlers>
        <add name="iisnode" path="index.js" verb="*" modules="iisnode" />
      </handlers>
      <iisnode node_env="development" loggingEnabled="true" debuggingEnabled="true" nodeProcessCountPerApplication="10" devErrorsEnabled="true" logDirectory="..\..\LogFiles\nodejs" promoteServerVars="HTTPS" enableXFF="true" />
      <rewrite>
        <rules>
          <!-- Don't interfere with requests for logs -->
          <rule name="LogFile" patternSyntax="ECMAScript" stopProcessing="true">
            <match url="^[a-zA-Z0-9_\-]+\.js\.logs\/\d+\.txt$" />
          </rule>
          <!-- Do not interfere with requests for node-inspector debugging -->
          <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
            <match url="^index.js\/debug[\/]?" />
          </rule>
          
          <!-- All other URLs are mapped to the node.js site entry point -->
          <rule name="DynamicContent">
            <conditions>
              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
            </conditions>
            <action type="Rewrite" url="index.js" />
          </rule>
        </rules>
      
      </rewrite>

      <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
      <security>
        <requestFiltering>
          <hiddenSegments>
            <remove segment="bin" />
          </hiddenSegments>
        </requestFiltering>
      </security>

      <!-- Make sure error responses are left untouched -->
      <httpErrors errorMode="Detailed" existingResponse="PassThrough" />
    </system.webServer>
  </configuration>